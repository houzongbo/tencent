一：哈希
  1. 两数之和  array_search寻找元素索引
* 2. 字母异位词分组 array_value输出数组、table中的值
                    str_split:将字符串分成数组     implode(分隔符，array)：将数组拼接成字符串
                    sort() 对数组进行排序
  3. 最长连续数列  去重（可以用array_flip 进行数组kv反转实现值的去重）

二：指针
* 4. 移动0    快慢指针 慢指针存非0    [x,y] = [y,x] 数组换位
  5. 盛水最多的容器  前后双指针
* 6. 三数之和  伪三指针 实际是循环的前后双指针； 注意去重！
* 7. 接雨水  动态规划  对于每一列求左侧最高和右侧最高  用循环记录两个list
             双指针，降低空间复杂度
三: 滑动窗口
* 8. 无重复字符的最长子串   快慢指针 可以使用array的value存储滑块，  也可以使用array的key存滑块value存索引
            $slow = max($slow, $set[$s[$fast]] + 1);
* 9. 找到字符串中所有字母异位词    快慢指针    *需要注意每个字母的数量，一个array记录滑块， 一个array记录滑块中每个字母数量

四. 子串
* 10. 和为K的子数组        前缀和        每次遍历的时候都记录了当前的前缀和以及出现的次数 ，当前前缀和-目标值 = 之前记录的前缀和
* 11. 滑动窗口最大值      *队列   1. 优先队列 用到了SplPriorityQueue      2. 单调队列  SplQueue  维护一个单调减的队列，每次都把比当前小的值pop出来  队尾存大   队头存小
* 12. 最小覆盖子串        滑动窗口    用hash判断是否满足子串要求，单独写个check函数

五. 数组
  13. 最大子数组和    动态规划
* 14. 合并区间      先排序 sort()
* 15. 轮转数组      活用反转数组  反转3次
  16. 除自身以外数组的乘积      动态规划
* 17. 缺失的第一个正数        O（1） 空间，利用数组自身来作为hash表，  交换后还要考虑换过来的值  

六. 矩阵
* 18. 矩阵置零      用矩阵的第一行和第一列来存放矩阵信息（是否有0） ，但是得预先用两个变量存放一行一列的信息。
  19. 螺旋矩阵      上下左右四个函数，注意每次更新边界
  20. 旋转图像      多次旋转  对角+横向
* 21. 搜索二维矩阵II    从右上角开始，target小左移，target大下移

七. 链表    环形链表用双指针    链表换位考虑递归
* 22. 相交链表    双指针    重定向，  *用！==  而不是！=  链表节点可能值相同  但是内存不同
* 23. 反转链表    迭代法，递归法   递归法注意在开始加上判断
* 24. 回文链表    数组；递归，用到引用或者用public声明 this调用；链表中间隔断，翻转前半链表，再进行判断
  25. 环形链表    快慢指针
* 26. 环形链表II   快慢指针， 需要两次相遇，第一次相遇后 将快指针放到链表头
  27. 合并两个有序链表   经典递归   
  28. 两数相加    模拟法
  29. 删除链表的倒数第 N 个结点    经典双指针，fast先走n
  30. 两两交换链表中的节点      迭代法，比较复杂$tmp,$now,$pre  递归
* 31. K个一组翻转链表    递归法，先判断k是否满足翻转，再进行反转链表
！32. 随机链表的复制      php 有报错    可用递归；hash存，来过滤重复
！33. 排序链表      归并排序
* 34. 合并k个升序链表     分治法 ，分治算法边界
* 35. LRU      hash+双向链表   moveToHead;addToHead;removeNode            ***构造函数有两个__; 更新hash的时候先删后加

八. 二叉树
  36. 二叉树的中序遍历  
  

