基础语法

string

strings.Builder          var s string.Builder    s.WriteString()    result := s.String()
bytes.Buffer
strings.Join
strings.Split

sort
sort.Ints
sort.Strings
sort.Floats

1. GMP模型
    线程M：N模型
    G：协程，用户空间，任务调度单位
    P：调度器，负责给G分配M。本地有队列，存放G。  也有全局队列
    M：线程，内核空间，真正与cpu交互执行

    系统调用：GM 与 P解绑，P带着剩余队列找新的M继续执行。 GM捆绑系统调用，完成后，M进入线程池，G进入空余P队列或者  全局队列
    阻塞：G与M解绑，阻塞等待，完成后G进入全局队列
    抢占调度：协作式抢占，向G标记，每次G调用函数，morestack检查标记。    信号抢占：M执行前就起监听信号，抢占时直接向M发送信号

2. GC原理
    三色标记法：
        1. 先STW，开启写屏障
        2. 把所有对象置成白色
        3. 从根对象开始，白色置成灰色，维护一个灰色对象list，灰色对象置成黑色
        4. 当灰色对象list为空，回收所有白色对象

        混合写屏障：  1. 栈对象都是黑色    2. 黑色对象新引用或删除对象置成灰色
3. 内存管理
    TCMallock内存管理机制
    
    mCache： 给每个P（执行线程）配置了缓存； 目的是可不加锁申请小内存。      每个大小规格配置一个链表
    mCentral： 中心缓存， 当mCache不够时在这里申请内存。 每个大小规格配置两个链表
    mHeap： 内存堆。 大对象内存 或 mCentral不够时在这申请。  树形结构存储，  也存储垃圾回收的内存
4. 切片和数组

5. string byte rune

6. map

7. interface

8. reflect

9. channel

10. select
